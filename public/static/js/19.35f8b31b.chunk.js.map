{"version":3,"sources":["views/app-views/dashboards/route.jsx"],"names":["Dashboards","match","history","useHistory","useEffect","changeDashboard","THEME_CONFIG","dashboardAlternation","url","location","pathname","push","timer","setInterval","clearTimeout","fallback","cover","path","component","lazy","from","to"],"mappings":"2HAAA,kDA+DeA,UA1DI,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEdC,EAAUC,cAsChB,OApCAC,qBAAU,WAER,IAAMC,EAAkB,WAEtB,GAAKC,IAAaC,qBAAlB,CAEA,IAAIC,EAEJ,OAAQN,EAAQO,SAASC,UAEvB,IAAK,yBACHF,EAAM,sBACN,MAEF,IAAK,sBACHA,EAAM,4BACN,MAEF,IAAK,4BACHA,EAAM,yBACN,MAEF,QACEA,EAAMN,EAAQO,SAASC,SAGvBF,IAAQN,EAAQO,SAASC,UAC7BR,EAAQS,KAAKH,KAGfH,IACA,IAAMO,EAAQC,aAAY,kBAAMR,MAAmB,KACnD,OAAO,kBAAMS,aAAaF,MAEzB,CAACV,IAEI,cAAC,WAAD,CAAUa,SAAU,cAAC,IAAD,CAASC,MAAM,YAAnC,SAEN,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAI,UAAKhB,EAAMO,IAAX,eAA6BU,UAAWC,gBACjD,kBAAM,+EAER,cAAC,IAAD,CAAOF,KAAI,UAAKhB,EAAMO,IAAX,YAA0BU,UAAWC,gBAC9C,kBAAM,uEAER,cAAC,IAAD,CAAOF,KAAI,UAAKhB,EAAMO,IAAX,kBAAgCU,UAAWC,gBACpD,kBAAM,wEAER,cAAC,IAAD,CAAUC,KAAI,UAAKnB,EAAMO,KAAOa,GAAE,UAAKpB,EAAMO,IAAX","file":"static/js/19.35f8b31b.chunk.js","sourcesContent":["import React, { lazy, Suspense, useEffect } from 'react';\r\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { THEME_CONFIG } from '../../../configs/AppConfig';\r\n\r\nconst Dashboards = ({ match }) => {\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n\r\n    const changeDashboard = () => {\r\n\r\n      if (!THEME_CONFIG.dashboardAlternation) return;\r\n\r\n      let url;\r\n\r\n      switch (history.location.pathname) {\r\n\r\n        case '/dashboards/conference':\r\n          url = '/dashboards/carrier';\r\n          break;\r\n\r\n        case '/dashboards/carrier':\r\n          url = '/dashboards/effectiveness';\r\n          break;\r\n\r\n        case '/dashboards/effectiveness':\r\n          url = '/dashboards/conference';\r\n          break;\r\n\r\n        default:\r\n          url = history.location.pathname;\r\n      }\r\n\r\n      if (url === history.location.pathname) return;\r\n      history.push(url);\r\n    };\r\n\r\n    changeDashboard();\r\n    const timer = setInterval(() => changeDashboard(), 60000);\r\n    return () => clearTimeout(timer);\r\n\r\n  }, [history]);\r\n\r\n  return (<Suspense fallback={<Loading cover=\"content\"/>}>\r\n\r\n    <Switch>\r\n      <Route path={`${match.url}/conference`} component={lazy(\r\n        () => import(`./Conference`))}/>\r\n\r\n      <Route path={`${match.url}/carrier`} component={lazy(\r\n        () => import(`./Carrier`))}/>\r\n\r\n      <Route path={`${match.url}/effectiveness`} component={lazy(\r\n        () => import(`./Effectiveness`))}/>\r\n\r\n      <Redirect from={`${match.url}`} to={`${match.url}/conference`}/>\r\n    </Switch>\r\n  </Suspense>);\r\n\r\n};\r\n\r\nexport default Dashboards;\r\n\r\n// setInterval(() => dasboardAlternation(), 3000);\r\n// const timer = setInterval(() => dasboardAlternation(), 5000);\r\n// return () => clearTimeout(timer);\r\n\r\n"],"sourceRoot":""}