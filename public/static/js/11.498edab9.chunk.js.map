{"version":3,"sources":["constants/ChartConstant.js","utils/api.js","components/customs/HorizontalBarChartWidget.jsx","components/customs/HeatMapChartWidget.jsx","views/app-views/dashboards/Effectiveness.jsx"],"names":["COLORS","apexLineChartDefaultOption","chart","zoom","enabled","toolbar","show","colors","dataLabels","stroke","width","curve","lineCap","legend","position","horizontalAlign","offsetY","itemMargin","vertical","tooltipHoverFormatter","val","opts","w","globals","series","seriesIndex","dataPointIndex","xaxis","categories","grid","lines","yaxis","apexPieChartDefaultOption","plotOptions","pie","size","customScale","expandOnClick","donut","labels","total","showAlways","label","fontSize","fontFamily","fontWeight","color","formatter","seriesTotals","reduce","a","b","apexHorizontalBarDefaultOptions","type","id","animations","easing","speed","animateGradually","delay","dynamicAnimation","bar","horizontal","title","text","undefined","baseURL","window","location","origin","headers","generateToken","split","api","axios","create","defaults","Chart","props","HorizontalBarWidget","bodyClass","options","orientation","chartOptions","jh","clone","Object","assign","className","height","HeatMapChartWidget","yaxix","reversed","heatmap","colorScale","ranges","from","to","name","tooltip","EffectivenessMatWidget","matSeries","data","push","PartingPerLineWidget","splitLine","map","x","linha","planejado","realizado","HorizontalBarChartWidget","offsetX","style","showLabels","PartingPerTransportWidget","splitCarrier","Number","transportadora","EffectivenessDashboard","useState","setData","moment","lastRefresh","setLastRefresh","load","setLoad","useEffect","timer","timeout","execApi","runnow","THEME_CONFIG","dataRefresh","diff","get","then","response","doc","catch","err","console","error","localStorage","getItem","setInterval","clearTimeout","gutter","xs","sm","md","lg","xl","xxl"],"mappings":"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","file":"static/js/11.498edab9.chunk.js","sourcesContent":["export const COLOR_1 = '#3e82f7';  // blue\r\nexport const COLOR_2 = '#04d182';  // cyan\r\nexport const COLOR_3 = '#ff6b72';  // volcano\r\nexport const COLOR_4 = '#ffc107';  // gold\r\nexport const COLOR_5 = '#a461d8';  // purple\r\nexport const COLOR_6 = '#fa8c16';  // orange\r\nexport const COLOR_7 = '#17bcff';  // geekblue\r\n\r\nexport const COLOR_1_LIGHT = 'rgba(62, 130, 247, 0.15)';\r\nexport const COLOR_2_LIGHT = 'rgba(4, 209, 130, 0.1)';\r\nexport const COLOR_3_LIGHT = 'rgba(222, 68, 54, 0.1)';\r\nexport const COLOR_4_LIGHT = 'rgba(255, 193, 7, 0.1)';\r\nexport const COLOR_5_LIGHT = 'rgba(139, 75, 157, 0.1)';\r\nexport const COLOR_6_LIGHT = 'rgba(250, 140, 22, .1)';\r\nexport const COLOR_7_LIGHT = 'rgba(23, 188, 255, 0.15)';\r\n\r\nexport const COLORS = [\r\n  COLOR_1, COLOR_2, COLOR_3, COLOR_4, COLOR_5, COLOR_6, COLOR_7];\r\n\r\nexport const COLORS_LIGHT = [\r\n  COLOR_1_LIGHT,\r\n  COLOR_2_LIGHT,\r\n  COLOR_3_LIGHT,\r\n  COLOR_4_LIGHT,\r\n  COLOR_5_LIGHT,\r\n  COLOR_6_LIGHT,\r\n  COLOR_7_LIGHT];\r\n\r\nexport const COLOR_AXES = '#edf2f9';\r\nexport const COLOR_TEXT = '#455560';\r\n\r\nexport const apexLineChartDefaultOption = {\r\n  chart: {\r\n    zoom: {\r\n      enabled: false,\r\n    },\r\n    toolbar: {\r\n      show: false,\r\n    },\r\n  },\r\n  colors: [...COLORS],\r\n  dataLabels: {\r\n    enabled: false,\r\n  },\r\n  stroke: {\r\n    width: 3,\r\n    curve: 'smooth',\r\n    lineCap: 'round',\r\n  },\r\n  legend: {\r\n    position: 'top',\r\n    horizontalAlign: 'right',\r\n    offsetY: -15,\r\n    itemMargin: {\r\n      vertical: 20,\r\n    },\r\n    tooltipHoverFormatter: function (val, opts) {\r\n      return val + ' - ' +\r\n        opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + '';\r\n    },\r\n  },\r\n  xaxis: {\r\n    categories: [],\r\n  },\r\n  grid: {\r\n    xaxis: {\r\n      lines: {\r\n        show: true,\r\n      },\r\n    },\r\n    yaxis: {\r\n      lines: {\r\n        show: false,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport const apexAreaChartDefaultOption = { ...apexLineChartDefaultOption };\r\n\r\nexport const apexBarChartDefaultOption = {\r\n  chart: {\r\n    zoom: {\r\n      enabled: false,\r\n    },\r\n    toolbar: {\r\n      show: false,\r\n    },\r\n  },\r\n  plotOptions: {\r\n    bar: {\r\n      horizontal: false,\r\n      columnWidth: '25px',\r\n      startingShapre: 'rounded',\r\n      endingShape: 'rounded',\r\n    },\r\n  },\r\n  colors: [...COLORS],\r\n  dataLabels: {\r\n    enabled: false,\r\n  },\r\n  stroke: {\r\n    show: true,\r\n    width: 6,\r\n    curve: 'smooth',\r\n    colors: ['transparent'],\r\n  },\r\n  legend: {\r\n    position: 'top',\r\n    horizontalAlign: 'right',\r\n    offsetY: -15,\r\n    inverseOrder: true,\r\n    itemMargin: {\r\n      vertical: 20,\r\n    },\r\n    tooltipHoverFormatter: function (val, opts) {\r\n      return val + ' - ' +\r\n        opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + '';\r\n    },\r\n  },\r\n  xaxis: {\r\n    categories: [],\r\n  },\r\n  fill: {\r\n    opacity: 1,\r\n  },\r\n  tooltip: {\r\n    y: {\r\n      formatter: val => (`${val}`),\r\n    },\r\n  },\r\n};\r\n\r\nexport const apexPieChartDefaultOption = {\r\n  colors: [...COLORS],\r\n  plotOptions: {\r\n    pie: {\r\n      size: '100%',\r\n      customScale: 1,\r\n      expandOnClick: true,\r\n      donut: {\r\n        size: '50%',\r\n        labels: {\r\n          show: true,\r\n          total: {\r\n            show: true,\r\n            showAlways: true,\r\n            label: '',\r\n            fontSize: '18px',\r\n            fontFamily: 'Roboto',\r\n            fontWeight: 'bold',\r\n            color: '#1a3353',\r\n            formatter: function (w) {\r\n              return w.globals.seriesTotals.reduce((a, b) => {\r\n                return a + b;\r\n              }, 0);\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n  labels: [],\r\n  dataLabels: {\r\n    enabled: false,\r\n  },\r\n  legend: {\r\n    show: false,\r\n  },\r\n};\r\n\r\nexport const apexSparklineChartDefultOption = {\r\n  chart: {\r\n    type: 'line',\r\n    sparkline: {\r\n      enabled: true,\r\n    },\r\n  },\r\n  stroke: {\r\n    width: 2,\r\n    curve: 'smooth',\r\n  },\r\n  tooltip: {\r\n    fixed: {\r\n      enabled: false,\r\n    },\r\n    x: {\r\n      show: false,\r\n    },\r\n    y: {\r\n      title: {\r\n        formatter: function (seriesName) {\r\n          return '';\r\n        },\r\n      },\r\n    },\r\n    marker: {\r\n      show: false,\r\n    },\r\n  },\r\n};\r\n\r\nexport const apexHorizontalBarDefaultOptions = {\r\n\r\n  chart: {\r\n    type: 'bar',\r\n    id: 'chart-simple-bar',\r\n    toolbar: {\r\n      show: false,\r\n    },\r\n  },\r\n\r\n  animations: {\r\n    enabled: true,\r\n    easing: 'easeinout',\r\n    speed: 800,\r\n    animateGradually: {\r\n      enabled: true,\r\n      delay: 150,\r\n    },\r\n    dynamicAnimation: {\r\n      enabled: true,\r\n      speed: 350,\r\n    },\r\n  },\r\n\r\n  plotOptions: {\r\n    bar: {\r\n      horizontal: false,\r\n    },\r\n  },\r\n\r\n  dataLabels: {\r\n    enabled: true,\r\n  },\r\n\r\n  stroke: {\r\n    width: 1,\r\n    colors: ['#fff'],\r\n  },\r\n\r\n  // title: {\r\n  //   text: 'Conferência',\r\n  // },\r\n\r\n  xaxis: {\r\n    // type: 'numeric'\r\n  },\r\n\r\n  // xaxis: {\r\n  //   categories: [],\r\n  // },\r\n\r\n  yaxis: {\r\n    title: {\r\n      text: undefined,\r\n    },\r\n  },\r\n\r\n  // tooltip: {\r\n  //   y: {\r\n  //     formatter: function(val) {\r\n  //       return val + 'K';\r\n  //     },\r\n  //   },\r\n  // },\r\n  //\r\n  // fill: {\r\n  //   opacity: 1,\r\n  // },\r\n  //\r\n  // legend: {\r\n  //   position: 'top',\r\n  //   horizontalAlign: 'left',\r\n  //   offsetX: 40,\r\n  //   verticalAlign: 'bottom',\r\n  //   containerMargin: {\r\n  //     left: 35,\r\n  //     right: 60,\r\n  //   },\r\n  // },\r\n};\r\n\r\nexport const apexHeatMapDefaultOptions = {\r\n\r\n  chart: {\r\n    type: 'heatmap',\r\n    id: 'heatmap-chart',\r\n    toolbar: {\r\n      show: false,\r\n    },\r\n  },\r\n\r\n  plotOptions: {\r\n    heatmap: {\r\n      colorScale: {\r\n        ranges: [\r\n          {\r\n            from: -30,\r\n            to: 5,\r\n            color: '#00A100',\r\n            name: 'low',\r\n          }, {\r\n            from: 6,\r\n            to: 20,\r\n            color: '#128FD9',\r\n            name: 'medium',\r\n          }, {\r\n            from: 21,\r\n            to: 45,\r\n            color: '#FFB200',\r\n            name: 'high',\r\n          }],\r\n      },\r\n    },\r\n  },\r\n\r\n  dataLabels: {\r\n    enabled: false,\r\n  },\r\n\r\n  tooltip: {\r\n    enabled: false,\r\n  },\r\n\r\n  xaxis: {\r\n    crosshairs: {\r\n      show: false,\r\n    },\r\n  },\r\n\r\n  yaxis: {\r\n    crosshairs: {\r\n      show: false,\r\n    },\r\n  },\r\n\r\n  animations: {\r\n    enabled: true,\r\n    easing: 'easeinout',\r\n    speed: 800,\r\n    animateGradually: {\r\n      enabled: true,\r\n      delay: 150,\r\n    },\r\n    dynamicAnimation: {\r\n      enabled: true,\r\n      speed: 350,\r\n    },\r\n  },\r\n\r\n  legend: {\r\n    show: true,\r\n  },\r\n\r\n};\r\n","import axios from 'axios';\nimport { generateToken } from 'jarvisly-helper';\n\n// let baseURL = localStorage.getItem('baseURL');\nlet baseURL = window.location.origin;\n\n// if (!baseURL) {\n// baseURL = 'http://localhost:8000';\n//   localStorage.setItem('baseURL', baseURL);\n// }\n//\n\nconst headers = {\n  'Content-Type': 'application/json',\n  'x-token': '13d0db63-5d7f-4015-b347-822e375a84d1',\n  'x-requestcode': generateToken().split('-')[0],\n  'x-countrycode': 'br',\n  'x-languagecode': 'pt-br',\n  'x-timeoffset': -180,\n\n};\n\nconst api = axios.create({\n  baseURL: baseURL,\n});\n\napi.defaults.headers = headers;\n\nexport default api;\n","import React from 'react';\nimport ApexChart from 'react-apexcharts';\nimport { apexHorizontalBarDefaultOptions } from '../../constants/ChartConstant';\nimport jh from 'jarvisly-helper';\n\nconst Chart = props => {\n  return (<ApexChart {...props}/>);\n};\n\nconst HorizontalBarWidget = props => {\n\n  const {\n    series,\n    bodyClass,\n    categories,\n    options,\n    orientation,\n  } = props;\n\n  let chartOptions = jh.clone(apexHorizontalBarDefaultOptions);\n  chartOptions.xaxis.categories = categories;\n  chartOptions.plotOptions.bar.horizontal = orientation === 'horizontal';\n  // chartOptions.dataLabels.enabled = !!showLabels;\n\n  Object.assign(chartOptions, options);\n\n  return (<div className={`text-center ${bodyClass}`}>\n    <Chart\n      options={chartOptions}\n      series={series}\n      type=\"bar\"\n      height=\"300\"\n    />\n  </div>);\n};\n\nexport default HorizontalBarWidget;\n\n","import React from 'react';\nimport ApexChart from 'react-apexcharts';\n\nconst Chart = props => {\n  return (<ApexChart {...props}/>);\n};\n\nconst HeatMapChartWidget = props => {\n\n  const {\n    series,\n    bodyClass,\n  } = props;\n\n  const chartOptions = {\n    chart: {\n      type: 'heatmap',\n      id: 'heatmap-chart',\n      toolbar: {\n        show: false,\n      },\n    },\n\n    yaxix: {\n      reversed: false,\n    },\n\n    plotOptions: {\n      heatmap: {\n        // shadeIntensity: 0.5,\n        // radius: 0,\n        // useFillColorAsStroke: true,\n        colorScale: {\n          ranges: [\n            {\n              from: 1,\n              to: 1,\n              name: 'Em Operação',\n              color: '#00A100',\n            }, {\n              from: 2,\n              to: 2,\n              name: 'Manutenção',\n              color: '#FFB200',\n            }, {\n              from: 0,\n              to: 0,\n              name: 'Parada',\n              color: '#FF0000',\n            }],\n        },\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      width: 1,\n    }, // title: {\n    //   text: 'HeatMap Chart with Color Range',\n    // },\n\n    legend: {\n      show: true,\n      position: 'top', // horizontalAlign: 'left',\n      // offsetX: 40,\n      // verticalAlign: 'bottom',\n      // containerMargin: {\n      //   left: 35,\n      //   right: 60,\n      // },\n    },\n\n    tooltip: {\n      enabled: false,\n    },\n\n  };\n\n  return (<div className={`text-center ${bodyClass}`}>\n    <Chart\n      options={chartOptions}\n      series={series}\n      type=\"heatmap\"\n      height=\"300\"\n    />\n  </div>);\n\n};\n\nexport default HeatMapChartWidget;\n","import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Card } from 'antd';\r\nimport HorizontalBarChartWidget\r\n  from 'components/customs/HorizontalBarChartWidget';\r\nimport api from '../../../utils/api';\r\nimport HeatMapChartWidget from '../../../components/customs/HeatMapChartWidget';\r\nimport moment from 'moment';\r\nimport { THEME_CONFIG } from '../../../configs/AppConfig';\r\n\r\n// ========================================================================= //\r\n//                         EFFECTIVENESS MAT CHART                           //\r\n// ========================================================================= //\r\n\r\nconst EffectivenessMatWidget = props => {\r\n\r\n  const matSeries = props?.data?.matSeries;\r\n\r\n  const series = [\r\n    {\r\n      name: 'Linha 6',\r\n      data: [],\r\n    }, {\r\n      name: 'Linha 5',\r\n      data: [],\r\n    }, {\r\n      name: 'Linha 4',\r\n      data: [],\r\n    }, {\r\n      name: 'Linha 3',\r\n      data: [],\r\n    }, {\r\n      name: 'Linha 2',\r\n      data: [],\r\n    }, {\r\n      name: 'Linha 1',\r\n      data: [],\r\n    }];\r\n\r\n  /*\r\n    {\r\n      'hour': 0,\r\n      'x': '00h',\r\n      'y': 0,\r\n      'status': 'Parada',\r\n      'statusValue': 0,\r\n      'initialTime': '2022-02-11T00:00:00.000Z',\r\n      'finalTime': '2022-02-11T08:43:20.000Z',\r\n      'auto': true,\r\n    },\r\n  */\r\n\r\n  if (matSeries) {\r\n    series[0].data.push(...matSeries[0].data);\r\n    series[1].data.push(...matSeries[1].data);\r\n    series[2].data.push(...matSeries[2].data);\r\n    series[3].data.push(...matSeries[3].data);\r\n    series[4].data.push(...matSeries[4].data);\r\n    series[5].data.push(...matSeries[5].data);\r\n  }\r\n\r\n  return (<Card title=\"EFETIVIDADE ESTEIRAS\">\r\n\r\n    <HeatMapChartWidget\r\n      series={series}\r\n    />\r\n\r\n  </Card>);\r\n};\r\n\r\n// ========================================================================= //\r\n//                              PARTING MAT CHART                            //\r\n// ========================================================================= //\r\n\r\nconst PartingPerLineWidget = props => {\r\n\r\n  const splitLine = props?.data?.splitLine;\r\n\r\n  let categories = [];\r\n  let series = [\r\n    {\r\n      name: 'Planejado',\r\n      data: [],\r\n    }, {\r\n      name: 'Realizado',\r\n      data: [],\r\n    }];\r\n\r\n  if (splitLine) {\r\n    splitLine.map(x => {\r\n      categories.push(x.linha);\r\n      series[0].data.push(x.planejado);\r\n      series[1].data.push(x.realizado);\r\n      return x;\r\n    });\r\n  }\r\n\r\n  let options = {\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: true,\r\n      offsetX: 30,\r\n      style: {\r\n        colors: ['#333'],\r\n      },\r\n    },\r\n  };\r\n\r\n  return (<Card title=\"SEPARAÇÃO POR LINHA\">\r\n\r\n    <HorizontalBarChartWidget\r\n      options={options}\r\n      categories={categories}\r\n      series={series}\r\n\r\n      orientation=\"horizontal\"\r\n      showLabels={true}\r\n    />\r\n  </Card>);\r\n};\r\n\r\n// ========================================================================= //\r\n//                         PARTING TRANSPORT CHART                           //\r\n// ========================================================================= //\r\n\r\nconst PartingPerTransportWidget = props => {\r\n\r\n  const splitCarrier = props?.data?.splitCarrier;\r\n\r\n  let categories = [];\r\n  let series = [\r\n    {\r\n      name: 'Planejado',\r\n      data: [],\r\n    }, {\r\n      name: 'Realizado',\r\n      data: [],\r\n    }];\r\n\r\n  if (splitCarrier) {\r\n    splitCarrier.map(x => {\r\n\r\n      const planejado = x.planejado && typeof x.planejado === 'string' ? Number(\r\n        x.planejado) : x.planejado || 0;\r\n\r\n      const transform = x.transportadora.split(' ');\r\n      const transportadora = transform[0];\r\n\r\n      categories.push(transportadora);\r\n      series[0].data.push(planejado);\r\n      series[1].data.push(x.realizado);\r\n      return x;\r\n    });\r\n  }\r\n\r\n  let options = {\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: true,\r\n      offsetX: 30,\r\n      style: {\r\n        colors: ['#333'],\r\n      },\r\n    },\r\n  };\r\n\r\n  return (<Card title=\"SEPARAÇÃO POR TRANSPORTADORA\">\r\n\r\n    <HorizontalBarChartWidget\r\n      options={options}\r\n      categories={categories}\r\n      series={series}\r\n\r\n      orientation=\"horizontal\"\r\n      showLabels={true}\r\n    />\r\n  </Card>);\r\n};\r\n\r\n// ************************************************************************* //\r\n//                             COMPONENT WIDGET                              //\r\n// ************************************************************************* //\r\n\r\nconst EffectivenessDashboard = () => {\r\n\r\n  const [data, setData] = useState();\r\n  const [lastRefresh, setLastRefresh] = useState(moment());\r\n  const [load, setLoad] = useState(false);\r\n\r\n  useEffect(() => {\r\n\r\n    let timer;\r\n    let timeout;\r\n    const URI = '/effectiveness';\r\n\r\n    const execApi = async (runnow) => {\r\n\r\n      if (THEME_CONFIG.dataRefresh === '5min') {\r\n\r\n        timeout = 300000;\r\n\r\n      } else if (THEME_CONFIG.dataRefresh === '1min') {\r\n\r\n        timeout = 60000;\r\n\r\n      } else {  // 5sec\r\n\r\n        timeout = 5000;\r\n\r\n      }\r\n\r\n      if (!runnow) {\r\n        const diff = moment().diff(moment(lastRefresh), 'seconds');\r\n        if (diff < (timeout / 1000)) return;\r\n        setLastRefresh(moment());\r\n      }\r\n\r\n      await api\r\n        .get(URI)\r\n        .then((response) => setData(response.data?.doc))\r\n        .catch((err) => console.error(\r\n          `ERRO AO ACESSAR SERVIDOR: ${localStorage.getItem('baseURL')}\\n\\n`,\r\n          err));\r\n    };\r\n\r\n    if (!load) (async () => await execApi(true))();\r\n    setLoad(true);\r\n\r\n    timer = setInterval(async () => await execApi(), timeout);\r\n    return () => clearTimeout(timer);\r\n\r\n  }, [lastRefresh, load]);\r\n\r\n  return (<>\r\n    <Row gutter={16}>\r\n      <Col xs={24} sm={24} md={24} lg={24}>\r\n        <EffectivenessMatWidget data={data}/>\r\n      </Col>\r\n    </Row>\r\n\r\n    <Row gutter={16}>\r\n      <Col xs={24} sm={24} md={24} lg={12} xl={12} xxl={12}>\r\n        <PartingPerTransportWidget data={data}/>\r\n      </Col>\r\n      <Col xs={24} sm={24} md={24} lg={12} xl={12} xxl={12}>\r\n        <PartingPerLineWidget data={data}/>\r\n      </Col>\r\n    </Row>\r\n  </>);\r\n};\r\n\r\nexport default EffectivenessDashboard;\r\n\r\n"],"sourceRoot":""}