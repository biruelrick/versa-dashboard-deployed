{"version":3,"sources":["components/shared-components/Loading/index.js","components/shared-components/Flex/index.js","redux/constants/Auth.js","configs/AppConfig.js","configs/EnvironmentConfig.js","redux/reducers/Auth.js","redux/constants/Theme.js","redux/reducers/Theme.js","redux/reducers/index.js","configs/FirebaseConfig.js","auth/FirebaseAuth.js","services/FirebaseService.js","redux/sagas/Auth.js","redux/sagas/index.js","redux/store/index.js","components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","configs/NavigationConfig.js","redux/actions/Theme.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/layout-components/ThemeConfigurator.js","components/layout-components/NavPanel.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/NavSearch/index.js","components/layout-components/HeaderNav.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","views/app-views/route.jsx","layouts/app-layout/index.js","views/auth-views/index.js","layouts/auth-layout/index.js","lang/entries/pt_BR.js","lang/index.js","lang/entries/en_US.js","hooks/useBodyClass.js","views/index.js","App.js","serviceWorker.js","index.js","constants/ThemeConstant.js","redux/actions/Auth.js","utils/index.js"],"names":["Icon","style","fontSize","spin","Loading","props","align","cover","className","indicator","defaultProps","Flex","children","alignItems","justifyContent","mobileFlex","flexDirection","SIGNIN","AUTHENTICATED","SIGNOUT","SIGNOUT_SUCCESS","SIGNUP","SIGNUP_SUCCESS","SHOW_AUTH_MESSAGE","HIDE_AUTH_MESSAGE","SHOW_LOADING","AUTH_TOKEN","SIGNIN_WITH_GOOGLE","SIGNIN_WITH_GOOGLE_AUTHENTICATED","SIGNIN_WITH_FACEBOOK","SIGNIN_WITH_FACEBOOK_AUTHENTICATED","APP_NAME","API_BASE_URL","API_ENDPOINT_URL","APP_PREFIX_PATH","AUTH_PREFIX_PATH","darkMode","localStorage","getItem","dashboardAlternation","dataRefresh","includes","THEME_CONFIG","navCollapsed","sideNavTheme","SIDE_NAV_LIGHT","locale","navType","NAV_TYPE_TOP","topNavColor","headerNavColor","mobileNav","currentTheme","direction","DIR_LTR","setItem","toString","initState","loading","message","showMessage","redirect","token","auth","state","action","type","TOGGLE_COLLAPSED_NAV","CHANGE_LOCALE","SIDE_NAV_STYLE_CHANGE","NAV_TYPE_CHANGE","TOP_NAV_COLOR_CHANGE","HEADER_NAV_COLOR_CHANGE","TOGGLE_MOBILE_NAV","SWITCH_THEME","DIRECTION_CHANGE","initTheme","theme","reducers","combineReducers","Theme","Auth","FirebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firebaseConfig","firestore","googleAuthProvider","currentUser","GoogleAuthProvider","facebookAuthProvider","FacebookAuthProvider","FirebaseService","TwitterAuthProvider","GithubAuthProvider","signInEmailRequest","email","password","a","signInWithEmailAndPassword","then","user","catch","err","signOutRequest","signOut","signInGoogleRequest","signInWithPopup","signInFacebookRequest","signUpEmailRequest","createUserWithEmailAndPassword","signInWithFBEmail","signUpWithFBEmail","signInWithFBGoogle","signInWithFacebook","rootSaga","takeEvery","payload","call","put","showAuthMessage","uid","authenticated","undefined","signOutUser","removeItem","signOutSuccess","signUpSuccess","signInWithGoogleAuthenticated","signInWithFacebookAuthenticated","all","fork","getState","sagaMiddleware","createSagaMiddleware","middlewares","store","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","configureStore","injectIntl","withRef","this","React","createElement","Component","menus","key","path","title","icon","FundOutlined","breadcrumb","submenu","DashboardOutlined","DotChartOutlined","navigationConfig","toggleCollapsedNav","onMobileNavToggle","SubMenu","Menu","useBreakpoint","Grid","setLocale","isLocaleOn","localeKey","id","setDefaultOpen","keyList","keyString","arr","split","index","length","elm","push","SideNavContent","routeInfo","hideGroupTitle","localization","isMobile","utils","getBreakPoint","closeMobileNav","mode","height","borderRight","defaultSelectedKeys","defaultOpenKeys","map","menu","ItemGroup","subMenuFirst","subMenuSecond","Item","onClick","to","TopNavContent","backgroundColor","popupClassName","connect","NAV_TYPE_SIDE","Sider","Layout","SIDE_NAV_DARK","width","SIDE_NAV_WIDTH","collapsed","autoHide","getColorContrast","getLogoWidthGutter","isNavTop","mobileLogo","SIDE_NAV_COLLAPSED_WIDTH","getLogo","logoType","getLogoDisplay","src","alt","onClose","placement","closable","visible","bodyStyle","padding","ArrowLeftOutlined","ListOption","name","selector","disabled","vertical","mapDispatchToProps","onNavTypeChange","onNavStyleChange","onTopNavColorChange","onHeaderNavColorChange","onSwitchTheme","onDirectionChange","useThemeSwitcher","switcher","themes","handleChange","value","handleCheck","DataRefresh","justify","defaultValue","onChange","Option","RandomDashboard","defaultChecked","checked","isChecked","changedTheme","String","NavPanel","showDrawer","setState","SettingOutlined","DIR_RTL","optionList","getOptionList","navigationTree","optionTree","navItem","getCategoryIcon","category","AppstoreOutlined","AntDesignOutlined","FileTextOutlined","SearchInput","active","close","useState","setValue","options","setOptions","inputRef","useRef","current","focus","ref","dropdownClassName","onSelect","onSearch","searchText","item","label","filterOption","inputValue","option","toUpperCase","indexOf","placeholder","prefix","SearchOutlined","CloseOutlined","Header","searchActive","setSearchActive","onSearchClose","navMode","useEffect","MenuUnfoldOutlined","MenuFoldOutlined","breadcrumbData","forEach","i","assignBreadcrumb","obj","BreadcrumbRoute","withRouter","pathSnippets","location","pathname","filter","buildBreadcrumb","_","url","slice","join","AppBreadcrumb","PageHeader","display","AppViews","fallback","component","lazy","from","memo","Content","AppLayout","currentRouteInfo","getRouteInfo","isNavSide","getLayoutGutter","status","paddingLeft","paddingRight","AuthLayout","AuthViews","PtLang","antd","antdPtBR","messages","ptMsg","AppLocale","pt","ptLang","en","antdEnUS","enMsg","addBodyClass","document","body","classList","add","removeBodyClass","remove","currentAppLocale","Array","exact","dark","process","light","App","themeMap","defaultTheme","insertionPoint","Views","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","hideAuthMessage","showLoading","Utils","initials","shift","pop","navTree","route","p","hasOwnProperty","hex","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","color","percent","R","G","B","RR","GG","BB","rgba","trim","str","replace","inParts","r","g","b","parseFloat","toFixed","outParts","Math","round","part","number","positive","negative","toLowerCase","list","data","input","screens","breakpoints"],"mappings":"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","file":"static/js/main.c45b0991.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Icon = <LoadingOutlined style={{ fontSize: 35 }} spin />\r\n\r\nconst Loading = (props) => {\r\n\tconst { align, cover } = props\r\n\treturn (\r\n\t\t<div className={`loading text-${align} cover-${cover}`}>\r\n\t\t\t<Spin indicator={Icon} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLoading.propTypes = {\r\n\tsize: PropTypes.string,\r\n\tcover: PropTypes.string\r\n}\r\n\r\nLoading.defaultProps = {\r\n\talign: 'center',\r\n\tcover: 'inline'\r\n};\r\n\r\nexport default Loading","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","export const SIGNIN = 'SIGNIN'; \r\nexport const AUTHENTICATED = 'AUTHENTICATED';\r\nexport const SIGNOUT = 'SIGNOUT';\r\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS'\r\nexport const SIGNUP = 'SIGNUP';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SHOW_AUTH_MESSAGE = 'SHOW_AUTH_MESSAGE'\r\nexport const HIDE_AUTH_MESSAGE = 'HIDE_AUTH_MESSAGE'\r\nexport const SHOW_LOADING = 'SHOW_LOADING'\r\nexport const AUTH_TOKEN = 'auth_token'\r\nexport const SIGNIN_WITH_GOOGLE = 'SIGNIN_WITH_GOOGLE'\r\nexport const SIGNIN_WITH_GOOGLE_AUTHENTICATED = 'SIGNIN_WITH_GOOGLE_AUTHENTICATED'\r\nexport const SIGNIN_WITH_FACEBOOK = 'SIGNIN_WITH_FACEBOOK'\r\nexport const SIGNIN_WITH_FACEBOOK_AUTHENTICATED = 'SIGNIN_WITH_FACEBOOK_AUTHENTICATED'","import {\r\n  SIDE_NAV_LIGHT, DIR_LTR, NAV_TYPE_TOP,\r\n} from 'constants/ThemeConstant';\r\nimport { env } from './EnvironmentConfig';\r\n\r\nexport const APP_NAME = 'Aplipack';\r\nexport const API_BASE_URL = env.API_ENDPOINT_URL;\r\nexport const APP_PREFIX_PATH = '/dashboards';\r\nexport const AUTH_PREFIX_PATH = '/auth';\r\n\r\nlet darkMode = localStorage.getItem('darkMode') === 'true';\r\n\r\nlet dashboardAlternation = localStorage.getItem('dashboardAlternation') ===\r\n  'true';\r\nlet dataRefresh = localStorage.getItem('dataRefresh');\r\n\r\nif (!['5sec', '1min', '5min'].includes(dataRefresh)) dataRefresh = '5sec';\r\n\r\nexport const THEME_CONFIG = {\r\n  navCollapsed: false,\r\n  sideNavTheme: SIDE_NAV_LIGHT,\r\n  locale: 'pt', // navType: NAV_TYPE_SIDE,\r\n  navType: NAV_TYPE_TOP,\r\n  topNavColor: '#3e82f7',\r\n  headerNavColor: '',\r\n  mobileNav: false,\r\n  currentTheme: darkMode ? 'dark' : 'light',\r\n  direction: DIR_LTR,\r\n  dashboardAlternation: dashboardAlternation,\r\n  dataRefresh: dataRefresh,\r\n};\r\n\r\nlocalStorage.setItem('darkMode', darkMode.toString());\r\nlocalStorage.setItem('dashboardAlternation', dashboardAlternation.toString());\r\nlocalStorage.setItem('dataRefresh', dataRefresh);\r\n","const dev = {\r\n  API_ENDPOINT_URL: 'https://jsonplaceholder.typicode.com'\r\n};\r\n\r\nconst prod = {\r\n  API_ENDPOINT_URL: 'https://api.prod.com'\r\n};\r\n\r\nconst test = {\r\n  API_ENDPOINT_URL: 'https://api.test.com'\r\n};\r\n\r\nconst getEnv = () => {\r\n\tswitch (process.env.NODE_ENV) {\r\n\t\tcase 'development':\r\n\t\t\treturn dev\r\n\t\tcase 'production':\r\n\t\t\treturn prod\r\n\t\tcase 'test':\r\n\t\t\treturn test\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport const env = getEnv()\r\n","import {\r\n\tAUTH_TOKEN,\r\n\tAUTHENTICATED,\r\n\tSHOW_AUTH_MESSAGE,\r\n\tHIDE_AUTH_MESSAGE,\r\n\tSIGNOUT_SUCCESS,\r\n\tSIGNUP_SUCCESS,\r\n\tSHOW_LOADING,\r\n\tSIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nconst initState = {\r\n  loading: false,\r\n  message: '',\r\n  showMessage: false,\r\n  redirect: '',\r\n  token: localStorage.getItem(AUTH_TOKEN),\r\n}\r\n\r\nconst auth = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase AUTHENTICATED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\tcase SHOW_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: action.message,\r\n\t\t\t\tshowMessage: true,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase HIDE_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: '',\r\n\t\t\t\tshowMessage: false,\r\n\t\t\t}\r\n\t\tcase SIGNOUT_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNUP_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t  ...state,\r\n\t\t\t  loading: false,\r\n\t\t\t  token: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SHOW_LOADING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_GOOGLE_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_FACEBOOK_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default auth","export const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSED_NAV';\r\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\r\nexport const SIDE_NAV_STYLE_CHANGE = 'SIDE_NAV_STYLE_CHANGE';\r\nexport const NAV_TYPE_CHANGE = 'NAV_TYPE_CHANGE';\r\nexport const TOP_NAV_COLOR_CHANGE = 'TOP_NAV_COLOR_CHANGE';\r\nexport const HEADER_NAV_COLOR_CHANGE = 'HEADER_NAV_COLOR_CHANGE';\r\nexport const TOGGLE_MOBILE_NAV = 'TOGGLE_MOBILE_NAV';\r\nexport const SWITCH_THEME = 'SWITCH_THEME';\r\nexport const DIRECTION_CHANGE = 'DIRECTION_CHANGE';","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  CHANGE_LOCALE,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME,\r\n  DIRECTION_CHANGE\r\n} from '../constants/Theme';\r\nimport { THEME_CONFIG } from 'configs/AppConfig'\r\n\r\nconst initTheme = {\r\n  ...THEME_CONFIG\r\n};\r\n\r\nconst theme = (state = initTheme, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.navCollapsed\r\n      };\r\n    case SIDE_NAV_STYLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        sideNavTheme: action.sideNavTheme\r\n      };\r\n    case CHANGE_LOCALE:\r\n      return {\r\n        ...state,\r\n        locale: action.locale\r\n      };\r\n    case NAV_TYPE_CHANGE:\r\n      return {\r\n        ...state,\r\n        navType: action.navType\r\n      };\r\n    case TOP_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        topNavColor: action.topNavColor\r\n      };\r\n    case HEADER_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        headerNavColor: action.headerNavColor\r\n      };\r\n    case TOGGLE_MOBILE_NAV:\r\n      return {\r\n        ...state,\r\n        mobileNav: action.mobileNav\r\n      };\r\n    case SWITCH_THEME:\r\n      return {\r\n        ...state,\r\n        currentTheme: action.currentTheme\r\n      }\r\n    case DIRECTION_CHANGE:\r\n      return {\r\n        ...state,\r\n        direction: action.direction\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default theme","import { combineReducers } from 'redux';\r\nimport Auth from './Auth';\r\nimport Theme from './Theme';\r\n\r\nconst reducers = combineReducers({\r\n    theme: Theme,\r\n    auth: Auth\r\n});\r\n\r\nexport default reducers;","const FirebaseConfig = {\r\n  apiKey: 'AIzaSyAOWoRQGoegkmwnCca7B2GG5GUG_ZP1lcM',\r\n  authDomain: 'versa.firebaseapp.com',\r\n  databaseURL: 'https://versa.firebaseio.com',\r\n  projectId: 'versa',\r\n  storageBucket: 'versa.appspot.com',\r\n  messagingSenderId: '807555350717',\r\n  appId: '1:807555350717:web:145ba7c21af47203a2f7d4',\r\n  measurementId: 'G-8KE7HJB252'\r\n};\r\n\r\nexport default FirebaseConfig\r\n\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport firebaseConfig from 'configs/FirebaseConfig';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// firebase utils\r\nconst db = firebase.firestore()\r\nconst auth = firebase.auth();\r\nconst currentUser = auth.currentUser\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\nconst facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\r\nconst twitterAuthProvider = new firebase.auth.TwitterAuthProvider();\r\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider();\r\n\r\nexport {\r\n\tdb,\r\n\tauth,\r\n\tcurrentUser,\r\n\tgoogleAuthProvider,\r\n\tfacebookAuthProvider,\r\n\ttwitterAuthProvider,\r\n\tgithubAuthProvider\r\n};","import { auth, googleAuthProvider, facebookAuthProvider } from 'auth/FirebaseAuth';\r\n\r\nconst FirebaseService = {}\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n\tawait auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n  await auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\t\t\r\nFirebaseService.signOutRequest = async () =>\r\n\tawait auth.signOut().then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInGoogleRequest = async () =>\r\n  await auth.signInWithPopup(googleAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInFacebookRequest = async () =>\r\n  await auth.signInWithPopup(facebookAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signUpEmailRequest = async (email, password) =>\r\n\tawait auth.createUserWithEmailAndPassword(email, password).then(user => user).catch(err => err);\t\r\n\t\r\nexport default FirebaseService","import { all, takeEvery, put, fork, call } from 'redux-saga/effects';\r\nimport {\r\n\tAUTH_TOKEN,\r\n\tSIGNIN,\r\n\tSIGNOUT,\r\n\tSIGNUP,\r\n\tSIGNIN_WITH_GOOGLE,\r\n\tSIGNIN_WITH_FACEBOOK\r\n} from '../constants/Auth';\r\nimport {\r\n\tshowAuthMessage,\r\n\tauthenticated,\r\n\tsignOutSuccess,\r\n\tsignUpSuccess,\r\n\tsignInWithGoogleAuthenticated,\r\n\tsignInWithFacebookAuthenticated\r\n} from \"../actions/Auth\";\r\n\r\nimport FirebaseService from 'services/FirebaseService'\r\n\r\nexport function* signInWithFBEmail() {\r\n  yield takeEvery(SIGNIN, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(authenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signOut() {\r\n  yield takeEvery(SIGNOUT, function* () {\r\n\t\ttry {\r\n\t\t\tconst signOutUser = yield call(FirebaseService.signOutRequest);\r\n\t\t\tif (signOutUser === undefined) {\r\n\t\t\t\tlocalStorage.removeItem(AUTH_TOKEN);\r\n\t\t\t\tyield put(signOutSuccess(signOutUser));\r\n\t\t\t} else {\r\n\t\t\t\tyield put(showAuthMessage(signOutUser.message));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signUpWithFBEmail() {\r\n  yield takeEvery(SIGNUP, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signUpEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signUpSuccess(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t}\r\n\t);\r\n}\r\n\r\nexport function* signInWithFBGoogle() {\r\n  yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInGoogleRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithGoogleAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signInWithFacebook() {\r\n  yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInFacebookRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithFacebookAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n\t\tfork(signInWithFBEmail),\r\n\t\tfork(signOut),\r\n\t\tfork(signUpWithFBEmail),\r\n\t\tfork(signInWithFBGoogle),\r\n\t\tfork(signInWithFacebook)\r\n  ]);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport Auth from './Auth';\r\n\r\nexport default function* rootSaga(getState) {\r\n  yield all([\r\n    Auth(),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas/index\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nfunction configureStore(preloadedState) {\r\n \r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(reducers, preloadedState, composeEnhancers(\r\n    applyMiddleware(...middlewares)\r\n  ));\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\"../reducers/index\", () => {\r\n      const nextRootReducer = require(\"../reducers/index\");\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n\r\n","import React from \"react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nconst IntlMessage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(IntlMessage, {\r\n  withRef: false\r\n});\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import {\r\n  DashboardOutlined,\r\n  DotChartOutlined,\r\n  FundOutlined,\r\n} from '@ant-design/icons';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig';\r\n\r\nconst menus = [\r\n  {\r\n    key: 'conference',\r\n    path: `${APP_PREFIX_PATH}/conference`,\r\n    title: 'sidenav.dashboard.conference',\r\n    icon: FundOutlined,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n\r\n  {\r\n    key: 'carrier',\r\n    path: `${APP_PREFIX_PATH}/carrier`,\r\n    title: 'sidenav.dashboard.carrier',\r\n    icon: DashboardOutlined,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n\r\n  {\r\n    key: 'effectiveness',\r\n    path: `${APP_PREFIX_PATH}/effectiveness`,\r\n    title: 'sidenav.dashboard.effectiveness',\r\n    icon: DotChartOutlined,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n\r\n  // {\r\n  //   key: 'effectiveness',\r\n  //   path: `${APP_PREFIX_PATH}/effectiveness`,\r\n  //   title: 'sidenav.dashboard.effectiveness',\r\n  //   icon: DotChartOutlined,\r\n  //   breadcrumb: false,\r\n  //   submenu: [],\r\n  // },\r\n\r\n];\r\n\r\nconst navigationConfig = [...menus];\r\n\r\nexport default navigationConfig;\r\n","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  CHANGE_LOCALE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME,\r\n  DIRECTION_CHANGE\r\n} from '../constants/Theme';\r\n\r\nexport function toggleCollapsedNav(navCollapsed) {\r\n  return {\r\n    type: TOGGLE_COLLAPSED_NAV,\r\n    navCollapsed\r\n  };\r\n}\r\n\r\nexport function onNavStyleChange(sideNavTheme) {\r\n  return {\r\n    type: SIDE_NAV_STYLE_CHANGE,\r\n    sideNavTheme\r\n  };\r\n}\r\n\r\nexport function onLocaleChange(locale) {\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    locale\r\n  };\r\n}\r\n\r\nexport function onNavTypeChange(navType) {\r\n  return {\r\n    type: NAV_TYPE_CHANGE,\r\n    navType\r\n  };\r\n}\r\n\r\nexport function onTopNavColorChange(topNavColor) {\r\n  return {\r\n    type: TOP_NAV_COLOR_CHANGE,\r\n    topNavColor\r\n  };\r\n}\r\n\r\nexport function onHeaderNavColorChange(headerNavColor) {\r\n  return {\r\n    type: HEADER_NAV_COLOR_CHANGE,\r\n    headerNavColor\r\n  };\r\n}\r\n\r\nexport function onMobileNavToggle(mobileNav) {\r\n  return {\r\n    type: TOGGLE_MOBILE_NAV,\r\n    mobileNav\r\n  };\r\n}\r\n\r\nexport function onSwitchTheme(currentTheme) {\r\n  return {\r\n    type: SWITCH_THEME,\r\n    currentTheme\r\n  };\r\n}\r\n\r\nexport function onDirectionChange(direction) {\r\n  return {\r\n    type: DIRECTION_CHANGE,\r\n    direction\r\n  };\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n\tconst { sideNavTheme, routeInfo, hideGroupTitle, localization, onMobileNavToggle } = props;\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tonMobileNavToggle(false)\r\n\t\t}\r\n\t}\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n      mode=\"inline\"\r\n      style={{ height: \"100%\", borderRight: 0 }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n    >\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link onClick={() => closeMobileNav()} to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span> {setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link onClick={() => closeMobileNav()} to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link onClick={() => closeMobileNav()} to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n  return (\r\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName=\"top-nav-menu\"\r\n            title={\r\n              <span>\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  popupClassName=\"top-nav-menu\"\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  return { sideNavTheme, topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, localization = true }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle, localization}\r\n  return (\r\n    <Sider \r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor, localization = true}) => {\r\n\tconst props = { topNavColor, localization }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react';\r\nimport {\r\n  SIDE_NAV_WIDTH,\r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_TOP,\r\n} from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { connect } from 'react-redux';\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst getLogoWidthGutter = (props, isMobile) => {\r\n  const {\r\n    navCollapsed,\r\n    navType,\r\n  } = props;\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false;\r\n  if (isMobile && !props.mobileLogo) {\r\n    return 0;\r\n  }\r\n  if (isNavTop) {\r\n    return 'auto';\r\n  }\r\n  if (navCollapsed) {\r\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`;\r\n  } else {\r\n    return `${SIDE_NAV_WIDTH}px`;\r\n  }\r\n};\r\n\r\nconst getLogo = (props) => {\r\n  const {\r\n    navCollapsed,\r\n    logoType,\r\n  } = props;\r\n  if (logoType === 'light') {\r\n    if (navCollapsed) {\r\n      return '/img/logo-sm-white.png';\r\n    }\r\n    return '/img/logo-white.png';\r\n  }\r\n\r\n  if (navCollapsed) {\r\n    return '/img/logo-sm.png';\r\n  }\r\n  return '/img/logo.png';\r\n};\r\n\r\nconst getLogoDisplay = (isMobile, mobileLogo) => {\r\n  if (isMobile && !mobileLogo) {\r\n    return 'd-none';\r\n  } else {\r\n    return 'logo';\r\n  }\r\n};\r\n\r\nexport const Logo = (props) => {\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\r\n  return (\r\n    <div\r\n      className={getLogoDisplay(isMobile, props.mobileLogo)}\r\n      style={{ width: `${getLogoWidthGutter(props, isMobile)}` }}>\r\n      <img src={getLogo(props)} alt={`${APP_NAME} logo`} style={{ width: 90 }}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const {\r\n    navCollapsed,\r\n    navType,\r\n  } = theme;\r\n  return {\r\n    navCollapsed,\r\n    navType,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Logo);\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n  sideNavTheme,\r\n  mobileNav,\r\n  onMobileNavToggle,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n\r\n  const onClose = () => {\r\n    onMobileNavToggle(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"between\" alignItems=\"center\">\r\n          <Logo mobileLogo={true} />\r\n          <div className=\"nav-close\" onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"mobile-nav-menu\">\r\n          <Scrollbars autoHide>\r\n            <MenuContent type={NAV_TYPE_SIDE} {...props} />\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, mobileNav } = theme;\r\n  return { navCollapsed, sideNavTheme, mobileNav };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Row, Select, Switch } from 'antd';\r\nimport {\r\n  toggleCollapsedNav,\r\n  onNavTypeChange,\r\n  onNavStyleChange,\r\n  onTopNavColorChange,\r\n  onHeaderNavColorChange,\r\n  onSwitchTheme,\r\n  onDirectionChange,\r\n} from 'redux/actions/Theme';\r\nimport { useThemeSwitcher } from 'react-css-theme-switcher';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\nimport { THEME_CONFIG } from '../../configs/AppConfig';\r\n\r\nconst setLocale = (isLocaleOn, localeKey) => isLocaleOn ?\r\n  <IntlMessage id={localeKey}/> : localeKey.toString();\r\n\r\nconst ListOption = ({\r\n  name,\r\n  selector,\r\n  disabled,\r\n  vertical,\r\n}) => (<div className={`my-4 ${vertical\r\n  ? ''\r\n  : 'd-flex align-items-center justify-content-between'}`}>\r\n  <div className={`${disabled ? 'opacity-0-3' : ''} ${vertical\r\n    ? 'mb-3'\r\n    : ''}`}>{name}</div>\r\n  <div>{selector}</div>\r\n</div>);\r\n\r\nexport const ThemeConfigurator = ({\r\n  currentTheme,\r\n  onHeaderNavColorChange,\r\n  onSwitchTheme,\r\n}) => {\r\n\r\n  const {\r\n    switcher,\r\n    themes,\r\n  } = useThemeSwitcher();\r\n\r\n  const toggleTheme = (isChecked) => {\r\n    onHeaderNavColorChange('');\r\n    const changedTheme = isChecked ? 'dark' : 'light';\r\n\r\n    localStorage.setItem('darkMode', String(changedTheme === 'dark'));\r\n\r\n    onSwitchTheme(changedTheme);\r\n    switcher({ theme: themes[changedTheme] });\r\n  };\r\n\r\n  const handleChange = (value) => {\r\n    THEME_CONFIG.dataRefresh = value;\r\n    localStorage.setItem('dataRefresh', value);\r\n  };\r\n\r\n  const handleCheck = (value) => {\r\n    THEME_CONFIG.dashboardAlternation = value;\r\n    localStorage.setItem('dashboardAlternation', value);\r\n  };\r\n\r\n  const DataRefresh = () => {\r\n\r\n    return (<Row justify=\"space-between\" align=\"middle\" className=\"my-4\">\r\n      <div>Atualização de Dados</div>\r\n      <div>\r\n        <Select defaultValue={THEME_CONFIG.dataRefresh} onChange={handleChange}>\r\n          <Select.Option value=\"5sec\">5 Segundos</Select.Option>\r\n          <Select.Option value=\"1min\">1 Minuto</Select.Option>\r\n          <Select.Option value=\"5min\">5 Minutos</Select.Option>\r\n        </Select>\r\n      </div>\r\n    </Row>);\r\n\r\n  };\r\n\r\n  const RandomDashboard = () => {\r\n\r\n    return (<Row justify=\"space-between\" align=\"middle\" className=\"my-4\">\r\n      <div>Alternância de Dashboards</div>\r\n      <div>\r\n        <Switch defaultChecked={THEME_CONFIG.dashboardAlternation} onChange={handleCheck}/>\r\n      </div>\r\n    </Row>);\r\n\r\n  };\r\n\r\n  return (<>\r\n    <div className=\"mb-5\">\r\n\r\n      <ListOption\r\n        name={setLocale(true, 'dark_mode')}\r\n        selector={<Switch checked={currentTheme ===\r\n          'dark'} onChange={toggleTheme}/>}\r\n      />\r\n\r\n      <RandomDashboard/>\r\n\r\n      <DataRefresh/>\r\n\r\n    </div>\r\n\r\n  </>);\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const {\r\n    navType,\r\n    sideNavTheme,\r\n    navCollapsed,\r\n    topNavColor,\r\n    headerNavColor,\r\n    locale,\r\n    currentTheme,\r\n    direction,\r\n  } = theme;\r\n  return {\r\n    navType,\r\n    sideNavTheme,\r\n    navCollapsed,\r\n    topNavColor,\r\n    headerNavColor,\r\n    locale,\r\n    currentTheme,\r\n    direction,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  toggleCollapsedNav,\r\n  onNavTypeChange,\r\n  onNavStyleChange,\r\n  onTopNavColorChange,\r\n  onHeaderNavColorChange,\r\n  onSwitchTheme,\r\n  onDirectionChange,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeConfigurator);\r\n","import React, { Component } from 'react';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport { Drawer, Menu } from 'antd';\r\nimport ThemeConfigurator from './ThemeConfigurator';\r\nimport { connect } from 'react-redux';\r\nimport { DIR_RTL } from 'constants/ThemeConstant';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nconst setLocale = (isLocaleOn, localeKey) => isLocaleOn ?\r\n  <IntlMessage id={localeKey}/> : localeKey.toString();\r\n\r\nexport class NavPanel extends Component {\r\n  state = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  render () {\r\n    return (<>\r\n      <Menu mode=\"horizontal\">\r\n        <Menu.Item key=\"panel\" onClick={this.showDrawer}>\r\n          <span><SettingOutlined className=\"nav-icon mr-0\"/></span>\r\n        </Menu.Item>\r\n      </Menu>\r\n      <Drawer\r\n        title={setLocale(true, 'preferences')}\r\n        placement={this.props.direction === DIR_RTL ? 'left' : 'right'}\r\n        width={350}\r\n        onClose={this.onClose}\r\n        visible={this.state.visible}\r\n      >\r\n        <ThemeConfigurator/>\r\n      </Drawer>\r\n    </>);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } = theme;\r\n  return { locale };\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavPanel);\r\n","import React, { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = () => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<div className=\"search-list-item\">\r\n\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"font-weight-semibold\"><IntlMessage id={item.title} /></div>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(searchText))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tclassName={`nav-search-input ${isMobile? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`}\r\n\t\t\tdropdownClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tCloseOutlined,\r\n} from '@ant-design/icons';\r\nimport utils from 'utils'\r\nimport SearchInput from './SearchInput';\r\n\r\nexport const NavSearch = (props) => {\r\n\tconst { active, close, headerNavColor } = props\r\n\tconst mode = utils.getColorContrast(headerNavColor)\r\n\r\n\treturn (\r\n\t\t<div className={`nav-search ${active ? 'nav-search-active' : ''} ${mode}`} style={{backgroundColor: headerNavColor}}>\r\n\t\t\t<div className=\"d-flex align-items-center w-100\">\r\n\t\t\t\t<SearchInput close={close} active={active}/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"nav-close\" onClick={close}>\r\n\t\t\t\t<CloseOutlined />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { headerNavColor } =  theme;\r\n  return { headerNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(NavSearch)","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport NavPanel from './NavPanel';\r\nimport NavSearch  from './NavSearch';\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = props => {\r\n  const { navCollapsed, mobileNav, navType, headerNavColor, toggleCollapsedNav, onMobileNavToggle, isMobile, currentTheme, direction } = props;\r\n  const [searchActive, setSearchActive] = useState(false)\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false)\r\n  }\r\n\r\n  const onToggle = () => {\r\n    if(!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed)\r\n    } else {\r\n      onMobileNavToggle(!mobileNav)\r\n    }\r\n  }\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  const mode = ()=> {\r\n    if(!headerNavColor) {\r\n      return utils.getColorContrast(currentTheme === 'dark' ? '#00000' : '#ffffff' )\r\n    }\r\n    return utils.getColorContrast(headerNavColor)\r\n  }\r\n  const navMode = mode()\r\n  const getNavWidth = () => {\r\n    if(isNavTop || isMobile) {\r\n      return '0px'\r\n    }\r\n    if(navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!isMobile) {\r\n      onSearchClose()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Header className={`app-header ${navMode}`} style={{backgroundColor: headerNavColor}}>\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Logo logoType={navMode}/>\r\n        <div className=\"nav\" style={{width: `calc(100% - ${getNavWidth()})`}}>\r\n          <div className=\"nav-left\">\r\n            <ul className=\"ant-menu ant-menu-root ant-menu-horizontal\">          \r\n              {\r\n                isNavTop && !isMobile ?\r\n                null\r\n                :\r\n                <li className=\"ant-menu-item ant-menu-item-only-child\" onClick={() => {onToggle()}}>\r\n                  {navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n                </li>\r\n              }\r\n            </ul>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            <NavPanel direction={direction} />\r\n          </div>\r\n          <NavSearch active={searchActive} close={onSearchClose}/>\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, headerNavColor, mobileNav, currentTheme, direction } =  theme;\r\n  return { navCollapsed, navType, headerNavColor, mobileNav, currentTheme, direction }\r\n};\r\n\r\nexport default connect(mapStateToProps, {toggleCollapsedNav, onMobileNavToggle})(HeaderNav);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = withRouter(props => {\r\n\tconst { location } = props;\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\r\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n    return (\r\n      <Breadcrumb.Item key={url}>\r\n        <Link to={url}>{breadcrumbData[url]}</Link>\r\n      </Breadcrumb.Item>\r\n    );\r\n\t});\r\n  \r\n  return (\r\n\t\t<Breadcrumb>\r\n\t\t\t{buildBreadcrumb}\r\n\t\t</Breadcrumb>\r\n  );\r\n});\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","import React from 'react'\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React, {lazy, Suspense} from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport {APP_PREFIX_PATH} from 'configs/AppConfig';\r\n\r\nexport const AppViews = () => {\r\n\r\n  return (\r\n      <Suspense fallback={<Loading cover=\"content\"/>}>\r\n        <Switch>\r\n          {/*<Route path={`${APP_PREFIX_PATH}/home`} component={lazy(*/}\r\n          {/*    () => import(`./home`))}/>*/}\r\n\r\n          <Route path={`${APP_PREFIX_PATH}/`} component={lazy(() => import(`views/app-views/dashboards/route`))}/>\r\n\r\n\r\n          {/*<Redirect from={`${APP_PREFIX_PATH}`} to={`${APP_PREFIX_PATH}/home`}/>*/}\r\n          <Redirect from={`${APP_PREFIX_PATH}`} to={`${APP_PREFIX_PATH}/`}/>\r\n        </Switch>\r\n      </Suspense>\r\n  );\r\n};\r\n\r\nexport default React.memo(AppViews);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\n// import Footer from 'components/layout-components/Footer';\r\nimport AppViews from 'views/app-views/route';\r\nimport {\r\n  Layout,\r\n  Grid,\r\n} from \"antd\";\r\n\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport {\r\n  SIDE_NAV_WIDTH,\r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP,\r\n  DIR_RTL,\r\n  DIR_LTR\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\n\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location, direction }) => {\r\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if(isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n\r\n  const { status } = useThemeSwitcher();\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\" />;\r\n  }\r\n\r\n  const getLayoutDirectionGutter = () => {\r\n    if(direction === DIR_LTR) {\r\n      return {paddingLeft: getLayoutGutter()}\r\n    }\r\n    if(direction === DIR_RTL) {\r\n      return {paddingRight: getLayoutGutter()}\r\n    }\r\n    return {paddingLeft: getLayoutGutter()}\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile}/>\r\n      {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n      <Layout className=\"app-container\">\r\n        {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n        <Layout className=\"app-layout\" style={getLayoutDirectionGutter()}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          {/* <Footer /> */}\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } =  theme;\r\n  return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"page\"/>}>\r\n      <Switch>\r\n        <Route path={`${AUTH_PREFIX_PATH}/login`} component={lazy(() => import(`./authentication/login`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-1`} component={lazy(() => import(`./authentication/login-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-2`} component={lazy(() => import(`./authentication/login-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-1`} component={lazy(() => import(`./authentication/register-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-2`} component={lazy(() => import(`./authentication/register-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/forgot-password`} component={lazy(() => import(`./authentication/forgot-password`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-1`} component={lazy(() => import(`./errors/error-page-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-2`} component={lazy(() => import(`./errors/error-page-2`))} />\r\n        <Redirect from={`${AUTH_PREFIX_PATH}`} to={`${AUTH_PREFIX_PATH}/login`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default AppViews;\r\n\r\n","import React from 'react'\r\nimport { Switch, Route, } from \"react-router-dom\";\r\nimport AuthViews from 'views/auth-views'\r\n\r\nexport const AuthLayout = () => {\r\n\treturn (\r\n\t\t<div className=\"auth-container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"\" component={AuthViews} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default AuthLayout\r\n","import antdPtBR from 'antd/es/locale/pt_BR';\r\nimport ptMsg from '../locales/pt_BR.json';\r\n\r\nconst PtLang = {\r\n  antd: antdPtBR,\r\n  locale: 'pt-BR',\r\n  messages: {\r\n    ...ptMsg,\r\n  },\r\n};\r\nexport default PtLang;\r\n","import ptLang from './entries/pt_BR';\r\nimport enLang from './entries/en_US';\r\n\r\nconst AppLocale = {\r\n  pt: ptLang,\r\n  en: enLang,\r\n};\r\n\r\nexport default AppLocale;\r\n","import antdEnUS from 'antd/es/locale/en_US';\r\nimport enMsg from \"../locales/en_US.json\";\r\n\r\nconst EnLang = {\r\n  antd: antdEnUS,\r\n  locale: 'en-US',\r\n  messages: {\r\n    ...enMsg\r\n  },\r\n};\r\nexport default EnLang;\r\n","import {useEffect} from 'react';\r\n\r\nconst addBodyClass = className => document.body.classList.add(className);\r\nconst removeBodyClass = className => document.body.classList.remove(className);\r\n\r\nexport default function useBodyClass(className) {\r\n    useEffect(\r\n\t\t\t() => {\r\n\t\t\t\t// Set up\r\n\t\t\t\tclassName instanceof Array ? className.map(addBodyClass) : addBodyClass(className);\r\n\r\n\t\t\t\t// Clean up\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\t\tclassName instanceof Array ? className.map(removeBodyClass) : removeBodyClass(className);\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\t[className]\r\n    );\r\n}","import React from 'react';\r\nimport {Route, Switch, Redirect, withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport AppLayout from 'layouts/app-layout';\r\nimport AuthLayout from 'layouts/auth-layout';\r\nimport AppLocale from 'lang';\r\nimport {IntlProvider} from 'react-intl';\r\nimport {ConfigProvider} from 'antd';\r\nimport {APP_PREFIX_PATH, AUTH_PREFIX_PATH} from 'configs/AppConfig';\r\nimport useBodyClass from 'hooks/useBodyClass';\r\n\r\nexport const Views = (props) => {\r\n  const {locale, location, direction} = props;\r\n  const currentAppLocale = AppLocale[locale];\r\n  useBodyClass(`dir-${direction}`);\r\n\r\n  return (\r\n      <IntlProvider\r\n          locale={currentAppLocale.locale}\r\n          messages={currentAppLocale.messages}>\r\n        <ConfigProvider locale={currentAppLocale.antd} direction={direction}>\r\n\r\n          <Switch>\r\n\r\n            <Route exact path=\"/\">\r\n              <Redirect to={APP_PREFIX_PATH}/>\r\n            </Route>\r\n\r\n            <Route path={AUTH_PREFIX_PATH}>\r\n              <AuthLayout direction={direction}/>\r\n            </Route>\r\n\r\n            <Route path={APP_PREFIX_PATH}>\r\n              <AppLayout direction={direction} location={location}/>\r\n            </Route>\r\n\r\n          </Switch>\r\n\r\n        </ConfigProvider>\r\n      </IntlProvider>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({theme, auth}) => {\r\n  const {locale, direction} = theme;\r\n  const {token} = auth;\r\n  return {locale, token, direction};\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Views));\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Views from './views';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ThemeSwitcherProvider } from 'react-css-theme-switcher';\r\nimport { THEME_CONFIG } from './configs/AppConfig';\r\n\r\nconst themes = {\r\n  dark: `${process.env.PUBLIC_URL}/css/dark-theme.css`,\r\n  light: `${process.env.PUBLIC_URL}/css/light-theme.css`,\r\n};\r\n\r\nfunction App () {\r\n\r\n  return (<div className=\"App\">\r\n    <Provider store={store}>\r\n      <ThemeSwitcherProvider themeMap={themes} defaultTheme={THEME_CONFIG.currentTheme} insertionPoint=\"styles-insertion-point\">\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/\" component={Views}/>\r\n          </Switch>\r\n        </Router>\r\n      </ThemeSwitcherProvider>\r\n    </Provider>\r\n  </div>);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const ROW_GUTTER = 16;\r\nexport const SIDE_NAV_WIDTH = 250;\r\nexport const SIDE_NAV_COLLAPSED_WIDTH = 80;\r\nexport const SIDE_NAV_LIGHT = 'SIDE_NAV_LIGHT';\r\nexport const SIDE_NAV_DARK = 'SIDE_NAV_DARK';\r\nexport const NAV_TYPE_SIDE = 'SIDE'\r\nexport const NAV_TYPE_TOP = 'TOP'\r\nexport const DIR_LTR = 'ltr'\r\nexport const DIR_RTL = 'rtl'\r\n","import {\r\n  SIGNIN,\r\n  AUTHENTICATED,\r\n  SIGNOUT,\r\n  SIGNOUT_SUCCESS,\r\n  SHOW_AUTH_MESSAGE,\r\n  HIDE_AUTH_MESSAGE,\r\n  SIGNUP,\r\n  SIGNUP_SUCCESS,\r\n  SHOW_LOADING,\r\n  SIGNIN_WITH_GOOGLE,\r\n  SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nexport const signIn = (user) => {\r\n  return {\r\n    type: SIGNIN,\r\n    payload: user\r\n  }\r\n};\r\n\r\nexport const authenticated = (token) => {\r\n  return {\r\n    type: AUTHENTICATED,\r\n    token\r\n  }\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGNOUT\r\n  };\r\n};\r\n\r\nexport const signOutSuccess = () => {\r\n  return {\r\n    type: SIGNOUT_SUCCESS,\r\n  }\r\n};\r\n\r\nexport const signUp = (user) => {\r\n  return {\r\n    type: SIGNUP,\r\n    payload: user\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = (token) => {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithGoogle = () => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE\r\n  };\r\n};\r\n\r\nexport const signInWithGoogleAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithFacebook = () => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK\r\n  };\r\n};\r\n\r\nexport const signInWithFacebookAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const showAuthMessage = (message) => {\r\n  return {\r\n    type: SHOW_AUTH_MESSAGE,\r\n    message\r\n  };\r\n};\r\n\r\nexport const hideAuthMessage = () => {\r\n  return {\r\n    type: HIDE_AUTH_MESSAGE,\r\n  };\r\n};\r\n\r\nexport const showLoading = () => {\r\n  return {\r\n    type: SHOW_LOADING,\r\n  };\r\n};\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  return navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t  if( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t  }\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;"],"sourceRoot":""}