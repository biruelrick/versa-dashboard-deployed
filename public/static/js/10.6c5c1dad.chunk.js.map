{"version":3,"sources":["constants/ChartConstant.js","utils/api.js","components/customs/HorizontalBarChartWidget.jsx","views/app-views/dashboards/Conference.jsx","constants/DateConstant.js"],"names":["COLORS","apexLineChartDefaultOption","chart","zoom","enabled","toolbar","show","colors","dataLabels","stroke","width","curve","lineCap","legend","position","horizontalAlign","offsetY","itemMargin","vertical","tooltipHoverFormatter","val","opts","w","globals","series","seriesIndex","dataPointIndex","xaxis","categories","grid","lines","yaxis","apexPieChartDefaultOption","plotOptions","pie","size","customScale","expandOnClick","donut","labels","total","showAlways","label","fontSize","fontFamily","fontWeight","color","formatter","seriesTotals","reduce","a","b","apexHorizontalBarDefaultOptions","type","id","animations","easing","speed","animateGradually","delay","dynamicAnimation","bar","horizontal","title","text","undefined","baseURL","window","location","origin","headers","generateToken","split","api","axios","create","defaults","Chart","props","HorizontalBarWidget","bodyClass","options","orientation","chartOptions","jh","clone","Object","assign","className","height","RealTimeWidget","columns","dataIndex","sortDirections","defaultSortOrder","sorter","utils","antdTableSorter","render","_","record","cliente","moment","inicio_conf","format","displayType","value","volume_total","volume_parcial","Math","round","toFixed","suffix","thousandSeparator","divergencia","realTimeData","data","realTime","map","x","linha","pagination","dataSource","rowKey","LineWidget","lineData","line","name","push","planejado","conferido","HorizontalBarChartWidget","offsetX","style","showLabels","CarrierWidget","carrierData","carrier","transportadora","ConferenceDashboard","useState","setData","lastRefresh","setLastRefresh","load","setLoad","useEffect","timer","timeout","execApi","runnow","THEME_CONFIG","dataRefresh","diff","get","then","response","doc","catch","err","console","error","localStorage","getItem","setInterval","clearTimeout","gutter","xs","sm","md","lg","xl","xxl"],"mappings":"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","file":"static/js/10.6c5c1dad.chunk.js","sourcesContent":["export const COLOR_1 = '#3e82f7';  // blue\r\nexport const COLOR_2 = '#04d182';  // cyan\r\nexport const COLOR_3 = '#ff6b72';  // volcano\r\nexport const COLOR_4 = '#ffc107';  // gold\r\nexport const COLOR_5 = '#a461d8';  // purple\r\nexport const COLOR_6 = '#fa8c16';  // orange\r\nexport const COLOR_7 = '#17bcff';  // geekblue\r\n\r\nexport const COLOR_1_LIGHT = 'rgba(62, 130, 247, 0.15)';\r\nexport const COLOR_2_LIGHT = 'rgba(4, 209, 130, 0.1)';\r\nexport const COLOR_3_LIGHT = 'rgba(222, 68, 54, 0.1)';\r\nexport const COLOR_4_LIGHT = 'rgba(255, 193, 7, 0.1)';\r\nexport const COLOR_5_LIGHT = 'rgba(139, 75, 157, 0.1)';\r\nexport const COLOR_6_LIGHT = 'rgba(250, 140, 22, .1)';\r\nexport const COLOR_7_LIGHT = 'rgba(23, 188, 255, 0.15)';\r\n\r\nexport const COLORS = [\r\n  COLOR_1, COLOR_2, COLOR_3, COLOR_4, COLOR_5, COLOR_6, COLOR_7];\r\n\r\nexport const COLORS_LIGHT = [\r\n  COLOR_1_LIGHT,\r\n  COLOR_2_LIGHT,\r\n  COLOR_3_LIGHT,\r\n  COLOR_4_LIGHT,\r\n  COLOR_5_LIGHT,\r\n  COLOR_6_LIGHT,\r\n  COLOR_7_LIGHT];\r\n\r\nexport const COLOR_AXES = '#edf2f9';\r\nexport const COLOR_TEXT = '#455560';\r\n\r\nexport const apexLineChartDefaultOption = {\r\n  chart: {\r\n    zoom: {\r\n      enabled: false,\r\n    },\r\n    toolbar: {\r\n      show: false,\r\n    },\r\n  },\r\n  colors: [...COLORS],\r\n  dataLabels: {\r\n    enabled: false,\r\n  },\r\n  stroke: {\r\n    width: 3,\r\n    curve: 'smooth',\r\n    lineCap: 'round',\r\n  },\r\n  legend: {\r\n    position: 'top',\r\n    horizontalAlign: 'right',\r\n    offsetY: -15,\r\n    itemMargin: {\r\n      vertical: 20,\r\n    },\r\n    tooltipHoverFormatter: function (val, opts) {\r\n      return val + ' - ' +\r\n        opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + '';\r\n    },\r\n  },\r\n  xaxis: {\r\n    categories: [],\r\n  },\r\n  grid: {\r\n    xaxis: {\r\n      lines: {\r\n        show: true,\r\n      },\r\n    },\r\n    yaxis: {\r\n      lines: {\r\n        show: false,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport const apexAreaChartDefaultOption = { ...apexLineChartDefaultOption };\r\n\r\nexport const apexBarChartDefaultOption = {\r\n  chart: {\r\n    zoom: {\r\n      enabled: false,\r\n    },\r\n    toolbar: {\r\n      show: false,\r\n    },\r\n  },\r\n  plotOptions: {\r\n    bar: {\r\n      horizontal: false,\r\n      columnWidth: '25px',\r\n      startingShapre: 'rounded',\r\n      endingShape: 'rounded',\r\n    },\r\n  },\r\n  colors: [...COLORS],\r\n  dataLabels: {\r\n    enabled: false,\r\n  },\r\n  stroke: {\r\n    show: true,\r\n    width: 6,\r\n    curve: 'smooth',\r\n    colors: ['transparent'],\r\n  },\r\n  legend: {\r\n    position: 'top',\r\n    horizontalAlign: 'right',\r\n    offsetY: -15,\r\n    inverseOrder: true,\r\n    itemMargin: {\r\n      vertical: 20,\r\n    },\r\n    tooltipHoverFormatter: function (val, opts) {\r\n      return val + ' - ' +\r\n        opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + '';\r\n    },\r\n  },\r\n  xaxis: {\r\n    categories: [],\r\n  },\r\n  fill: {\r\n    opacity: 1,\r\n  },\r\n  tooltip: {\r\n    y: {\r\n      formatter: val => (`${val}`),\r\n    },\r\n  },\r\n};\r\n\r\nexport const apexPieChartDefaultOption = {\r\n  colors: [...COLORS],\r\n  plotOptions: {\r\n    pie: {\r\n      size: '100%',\r\n      customScale: 1,\r\n      expandOnClick: true,\r\n      donut: {\r\n        size: '50%',\r\n        labels: {\r\n          show: true,\r\n          total: {\r\n            show: true,\r\n            showAlways: true,\r\n            label: '',\r\n            fontSize: '18px',\r\n            fontFamily: 'Roboto',\r\n            fontWeight: 'bold',\r\n            color: '#1a3353',\r\n            formatter: function (w) {\r\n              return w.globals.seriesTotals.reduce((a, b) => {\r\n                return a + b;\r\n              }, 0);\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n  labels: [],\r\n  dataLabels: {\r\n    enabled: false,\r\n  },\r\n  legend: {\r\n    show: false,\r\n  },\r\n};\r\n\r\nexport const apexSparklineChartDefultOption = {\r\n  chart: {\r\n    type: 'line',\r\n    sparkline: {\r\n      enabled: true,\r\n    },\r\n  },\r\n  stroke: {\r\n    width: 2,\r\n    curve: 'smooth',\r\n  },\r\n  tooltip: {\r\n    fixed: {\r\n      enabled: false,\r\n    },\r\n    x: {\r\n      show: false,\r\n    },\r\n    y: {\r\n      title: {\r\n        formatter: function (seriesName) {\r\n          return '';\r\n        },\r\n      },\r\n    },\r\n    marker: {\r\n      show: false,\r\n    },\r\n  },\r\n};\r\n\r\nexport const apexHorizontalBarDefaultOptions = {\r\n\r\n  chart: {\r\n    type: 'bar',\r\n    id: 'chart-simple-bar',\r\n    toolbar: {\r\n      show: false,\r\n    },\r\n  },\r\n\r\n  animations: {\r\n    enabled: true,\r\n    easing: 'easeinout',\r\n    speed: 800,\r\n    animateGradually: {\r\n      enabled: true,\r\n      delay: 150,\r\n    },\r\n    dynamicAnimation: {\r\n      enabled: true,\r\n      speed: 350,\r\n    },\r\n  },\r\n\r\n  plotOptions: {\r\n    bar: {\r\n      horizontal: false,\r\n    },\r\n  },\r\n\r\n  dataLabels: {\r\n    enabled: true,\r\n  },\r\n\r\n  stroke: {\r\n    width: 1,\r\n    colors: ['#fff'],\r\n  },\r\n\r\n  // title: {\r\n  //   text: 'Conferência',\r\n  // },\r\n\r\n  xaxis: {\r\n    // type: 'numeric'\r\n  },\r\n\r\n  // xaxis: {\r\n  //   categories: [],\r\n  // },\r\n\r\n  yaxis: {\r\n    title: {\r\n      text: undefined,\r\n    },\r\n  },\r\n\r\n  // tooltip: {\r\n  //   y: {\r\n  //     formatter: function(val) {\r\n  //       return val + 'K';\r\n  //     },\r\n  //   },\r\n  // },\r\n  //\r\n  // fill: {\r\n  //   opacity: 1,\r\n  // },\r\n  //\r\n  // legend: {\r\n  //   position: 'top',\r\n  //   horizontalAlign: 'left',\r\n  //   offsetX: 40,\r\n  //   verticalAlign: 'bottom',\r\n  //   containerMargin: {\r\n  //     left: 35,\r\n  //     right: 60,\r\n  //   },\r\n  // },\r\n};\r\n\r\nexport const apexHeatMapDefaultOptions = {\r\n\r\n  chart: {\r\n    type: 'heatmap',\r\n    id: 'heatmap-chart',\r\n    toolbar: {\r\n      show: false,\r\n    },\r\n  },\r\n\r\n  plotOptions: {\r\n    heatmap: {\r\n      colorScale: {\r\n        ranges: [\r\n          {\r\n            from: -30,\r\n            to: 5,\r\n            color: '#00A100',\r\n            name: 'low',\r\n          }, {\r\n            from: 6,\r\n            to: 20,\r\n            color: '#128FD9',\r\n            name: 'medium',\r\n          }, {\r\n            from: 21,\r\n            to: 45,\r\n            color: '#FFB200',\r\n            name: 'high',\r\n          }],\r\n      },\r\n    },\r\n  },\r\n\r\n  dataLabels: {\r\n    enabled: false,\r\n  },\r\n\r\n  tooltip: {\r\n    enabled: false,\r\n  },\r\n\r\n  xaxis: {\r\n    crosshairs: {\r\n      show: false,\r\n    },\r\n  },\r\n\r\n  yaxis: {\r\n    crosshairs: {\r\n      show: false,\r\n    },\r\n  },\r\n\r\n  animations: {\r\n    enabled: true,\r\n    easing: 'easeinout',\r\n    speed: 800,\r\n    animateGradually: {\r\n      enabled: true,\r\n      delay: 150,\r\n    },\r\n    dynamicAnimation: {\r\n      enabled: true,\r\n      speed: 350,\r\n    },\r\n  },\r\n\r\n  legend: {\r\n    show: true,\r\n  },\r\n\r\n};\r\n","import axios from 'axios';\nimport { generateToken } from 'jarvisly-helper';\n\n// let baseURL = localStorage.getItem('baseURL');\nlet baseURL = window.location.origin;\n\n// if (!baseURL) {\n// baseURL = 'http://localhost:8000';\n//   localStorage.setItem('baseURL', baseURL);\n// }\n//\n\nconst headers = {\n  'Content-Type': 'application/json',\n  'x-token': '13d0db63-5d7f-4015-b347-822e375a84d1',\n  'x-requestcode': generateToken().split('-')[0],\n  'x-countrycode': 'br',\n  'x-languagecode': 'pt-br',\n  'x-timeoffset': -180,\n\n};\n\nconst api = axios.create({\n  baseURL: baseURL,\n});\n\napi.defaults.headers = headers;\n\nexport default api;\n","import React from 'react';\nimport ApexChart from 'react-apexcharts';\nimport { apexHorizontalBarDefaultOptions } from '../../constants/ChartConstant';\nimport jh from 'jarvisly-helper';\n\nconst Chart = props => {\n  return (<ApexChart {...props}/>);\n};\n\nconst HorizontalBarWidget = props => {\n\n  const {\n    series,\n    bodyClass,\n    categories,\n    options,\n    orientation,\n  } = props;\n\n  let chartOptions = jh.clone(apexHorizontalBarDefaultOptions);\n  chartOptions.xaxis.categories = categories;\n  chartOptions.plotOptions.bar.horizontal = orientation === 'horizontal';\n  // chartOptions.dataLabels.enabled = !!showLabels;\n\n  Object.assign(chartOptions, options);\n\n  return (<div className={`text-center ${bodyClass}`}>\n    <Chart\n      options={chartOptions}\n      series={series}\n      type=\"bar\"\n      height=\"300\"\n    />\n  </div>);\n};\n\nexport default HorizontalBarWidget;\n\n","import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Card, Table } from 'antd';\r\nimport HorizontalBarChartWidget\r\n  from 'components/customs/HorizontalBarChartWidget';\r\nimport NumberFormat from 'react-number-format';\r\nimport moment from 'moment';\r\nimport {\r\n  DATE_FORMAT_DD_MM_YYYY_WITH_SLASH_HH_mm,\r\n} from 'constants/DateConstant';\r\nimport utils from 'utils';\r\nimport api from '../../../utils/api';\r\nimport './styles.css';\r\nimport { THEME_CONFIG } from '../../../configs/AppConfig';\r\n\r\nconst COLOR_1 = '#3e82f7';  // blue\r\nconst COLOR_2 = '#04d182';  // cyan\r\nconst COLOR_3 = '#ff6b72';  // volcano\r\nconst COLOR_4 = '#ffc107';  // gold\r\nconst COLOR_5 = '#a461d8';  // purple\r\nconst COLOR_6 = '#fa8c16';  // orange\r\nconst COLOR_7 = '#17bcff';  // geekblue\r\n\r\nexport const COLORS = [\r\n  COLOR_1, COLOR_2, COLOR_3, COLOR_4, COLOR_5, COLOR_6, COLOR_7];\r\n\r\n// ========================================================================= //\r\n//                               REAL TIME CHART                             //\r\n// ========================================================================= //\r\n\r\nconst RealTimeWidget = props => {\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Linha',\r\n      dataIndex: 'linha',\r\n      sortDirections: ['ascend', 'descend', 'ascend'],\r\n      defaultSortOrder: 'ascend',\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, 'linha'),\r\n    }, {\r\n      title: 'Remessa',\r\n      dataIndex: 'remessa',\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, 'remessa'),\r\n    }, {\r\n      title: 'Cliente',\r\n      dataIndex: 'cliente',\r\n      render: (_, record) => (<div className=\"font-weight-semibold\">\r\n        <span>\r\n          {record.cliente}\r\n        </span>\r\n      </div>),\r\n\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, 'cliente'),\r\n    }, {\r\n      title: 'UF',\r\n      dataIndex: 'uf',\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, 'uf'),\r\n    }, {\r\n      title: 'Transportadora',\r\n      dataIndex: 'transportadora',\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, 'transportadora'),\r\n    }, {\r\n      title: 'Filial',\r\n      dataIndex: 'filial',\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, 'filial'),\r\n    }, {\r\n      title: 'Init. Conferência',\r\n      dataIndex: 'inicio_conf',\r\n      render: (_, record) => (<span>{moment(record.inicio_conf)\r\n        .format(DATE_FORMAT_DD_MM_YYYY_WITH_SLASH_HH_mm)}</span>),\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, 'date'),\r\n    },\r\n\r\n    {\r\n      title: 'Total',\r\n      dataIndex: 'volume_total',\r\n      render: (_, record) => (<div className=\"font-weight-semibold text-center\">\r\n        <NumberFormat\r\n          displayType={'text'}\r\n          value={record.volume_total}\r\n        />\r\n      </div>),\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, 'volume_total'),\r\n    },\r\n\r\n    {\r\n      title: 'Parcial',\r\n      dataIndex: 'volume_parcial',\r\n      render: (_, record) => (<div className=\"font-weight-semibold text-center\">\r\n        <NumberFormat\r\n          displayType={'text'}\r\n          value={record.volume_parcial}\r\n        />\r\n      </div>),\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, 'volume_parcial'),\r\n    },\r\n\r\n    {\r\n      title: 'Conferidos',\r\n      dataIndex: 'amount',\r\n      render: (_, record) => (<span className=\"font-weight-semibold\">\r\n\t\t\t\t<NumberFormat\r\n          displayType={'text'}\r\n          value={(Math.round(record.volume_parcial * 100) /\r\n            record.volume_total).toFixed(0)}\r\n          suffix={'%'}\r\n          thousandSeparator={true}\r\n        />\r\n\t\t\t</span>),\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, 'amount'),\r\n    },\r\n\r\n    {\r\n      title: 'Divergentes',\r\n      dataIndex: 'divergencia',\r\n      render: (_, record) => (<div className=\"font-weight-semibold\">\r\n        {record.divergencia}\r\n      </div>),\r\n      sorter: (a, b) => utils.antdTableSorter(a, b, 'divergencia'),\r\n    },\r\n\r\n  ];\r\n  const realTimeData = props?.data?.realTime;\r\n\r\n  if (realTimeData) realTimeData.map(x => x.id = x.linha);\r\n\r\n  return (<Card title=\"CONFERÊNCIA EM TEMPO REAL\">\r\n    <Table\r\n      pagination={false}\r\n      columns={columns}\r\n      dataSource={realTimeData}\r\n      rowKey=\"id\"\r\n    />\r\n  </Card>);\r\n};\r\n\r\n// ========================================================================= //\r\n//                           CONFERENCE BY LINE                              //\r\n// ========================================================================= //\r\n\r\nconst LineWidget = props => {\r\n\r\n  const lineData = props?.data?.line;\r\n\r\n  let categories = [];\r\n  let series = [\r\n    {\r\n      name: 'Planejado',\r\n      data: [],\r\n    }, {\r\n      name: 'Realizado',\r\n      data: [],\r\n    }];\r\n\r\n  if (lineData) {\r\n    lineData.map(x => {\r\n      categories.push(x.linha);\r\n      series[0].data.push(x.planejado);\r\n      series[1].data.push(x.conferido);\r\n      return x;\r\n    });\r\n  }\r\n\r\n  let options = {\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: true,\r\n      offsetX: 30,\r\n      style: {\r\n        colors: ['#333'],\r\n      },\r\n    },\r\n  };\r\n\r\n  return (<Card title=\"CONFERÊNCIA POR LINHA\">\r\n\r\n    <HorizontalBarChartWidget\r\n      options={options}\r\n      categories={categories}\r\n      series={series}\r\n\r\n      orientation=\"horizontal\"\r\n      showLabels={true}\r\n    />\r\n  </Card>);\r\n};\r\n\r\n// ========================================================================= //\r\n//                         CONFERENCE BY CARRIER                             //\r\n// ========================================================================= //\r\n\r\nconst CarrierWidget = props => {\r\n\r\n  const carrierData = props?.data?.carrier;\r\n\r\n  let categories = [];\r\n  let series = [\r\n    {\r\n      name: 'Planejado',\r\n      data: [],\r\n    }, {\r\n      name: 'Realizado',\r\n      data: [],\r\n    }];\r\n\r\n  if (carrierData) {\r\n    carrierData.map(x => {\r\n\r\n      const transform = x.transportadora.split(' ');\r\n      const transportadora = transform[0];\r\n\r\n      categories.push(transportadora);\r\n      series[0].data.push(x.planejado);\r\n      series[1].data.push(x.conferido);\r\n      return x;\r\n    });\r\n  }\r\n\r\n  let options = {\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: true,\r\n      offsetX: 30,\r\n      style: {\r\n        colors: ['#333'],\r\n      },\r\n    },\r\n  };\r\n\r\n  return (<Card title=\"CONFERÊNCIA POR TRANSPORTADORA\">\r\n\r\n    <HorizontalBarChartWidget\r\n      options={options}\r\n      categories={categories}\r\n      series={series}\r\n\r\n      orientation=\"horizontal\"\r\n      showLabels={true}\r\n    />\r\n  </Card>);\r\n};\r\n\r\n// ************************************************************************* //\r\n//                             COMPONENT WIDGET                              //\r\n// ************************************************************************* //\r\n\r\nconst ConferenceDashboard = () => {\r\n\r\n  const [data, setData] = useState();\r\n  const [lastRefresh, setLastRefresh] = useState(moment());\r\n  const [load, setLoad] = useState(false);\r\n\r\n  useEffect(() => {\r\n\r\n    let timer;\r\n    let timeout;\r\n    const URI = '/conference';\r\n\r\n    const execApi = async (runnow) => {\r\n\r\n      if (THEME_CONFIG.dataRefresh === '5min') {\r\n\r\n        timeout = 300000;\r\n\r\n      } else if (THEME_CONFIG.dataRefresh === '1min') {\r\n\r\n        timeout = 60000;\r\n\r\n      } else {  // 5sec\r\n\r\n        timeout = 5000;\r\n\r\n      }\r\n\r\n      if (!runnow) {\r\n        const diff = moment().diff(moment(lastRefresh), 'seconds');\r\n        if (diff < (timeout / 1000)) return;\r\n        setLastRefresh(moment());\r\n      }\r\n\r\n      await api\r\n        .get(URI)\r\n        .then((response) => setData(response.data?.doc))\r\n        .catch((err) => console.error(\r\n          `ERRO AO ACESSAR SERVIDOR: ${localStorage.getItem('baseURL')}\\n\\n`,\r\n          err));\r\n    };\r\n\r\n    if (!load) (async () => await execApi(true))();\r\n    setLoad(true);\r\n\r\n    timer = setInterval(async () => await execApi(), timeout);\r\n    return () => clearTimeout(timer);\r\n\r\n  }, [lastRefresh, load]);\r\n\r\n  return (<>\r\n    <Row gutter={16}>\r\n      <Col xs={24} sm={24} md={24} lg={24}>\r\n        <RealTimeWidget data={data}/>\r\n      </Col>\r\n    </Row>\r\n\r\n    <Row gutter={16}>\r\n      <Col xs={24} sm={24} md={24} lg={12} xl={12} xxl={12}>\r\n        <LineWidget data={data}/>\r\n      </Col>\r\n\r\n      <Col xs={24} sm={24} md={24} lg={12} xl={12} xxl={12}>\r\n        <CarrierWidget data={data}/>\r\n      </Col>\r\n\r\n\r\n      {/*\r\n      <Col xs={24} sm={24} md={12} lg={6} xl={6} xxl={6}>\r\n        <DivergenceVolumesWidget data={data}/>\r\n      </Col>\r\n      <Col xs={24} sm={24} md={12} lg={6} xl={6} xxl={6}>\r\n        <DivergenceReasonWidget data={data}/>\r\n      </Col>\r\n*/}\r\n    </Row>\r\n  </>);\r\n};\r\n\r\nexport default ConferenceDashboard;\r\n","export const DATE_FORMAT_YYYYMMdd = \"YYYYMMdd\";\r\nexport const DATE_FORMAT_YYYY_MM_dd = \"YYYY-MM-dd\";\r\nexport const DATE_FORMAT_YYYY_MM_dd_Combined = \"YYYYMMddHHmm\";\r\nexport const DATE_FORMAT_YYYY_MM_dd_HH_mm = \"YYYY-MM-dd HH:mm\";\r\nexport const DATE_FORMAT_DD_MM_YYYY = \"DD-MM-YYYY\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_WITH_DOT = \"DD.MM.YYYY\";\r\nexport const DATE_FORMAT_mm_dd_YYYY_WITH_SLASH = \"MM/dd/YYYY\";\r\nexport const DATE_FORMAT_m_d_YYYY_WITH_SLASH = \"M/d/YYYY\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_WITH_SLASH = \"DD/MM/YYYY\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_WITH_SLASH_HH_mm = \"DD/MM/YYYY HH:mm\";\r\nexport const DATE_FORMAT_dd_MMM = \"ddMMM\";\r\nexport const DATE_FORMAT_dd_MM_yy = \"ddMMyy\";\r\nexport const DATE_FORMAT_dd_MMM_YYYY = \"ddMMMYYYY\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_COMBINED = \"DDMMYYYY\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_HH_mm_ss = \"YYYY-MM-dd'T'HH:mm:ss\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_HH_mm_ss_sz = \"YYYY-MM-dd'T'HH:mm:ss.SSS\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_HH_mm = \"dd-MM-YYYY HH:mm\";\r\nexport const DATE_FORMAT_HH_mm = \"HH:mm\";\r\nexport const DATE_FORMAT_YYYY_MM_DDTHH_mm_ssZ = \"YYYY-MM-DD'T'HH:mm:ssZ\";\r\n"],"sourceRoot":""}